---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/hotels":
    get:
      summary: list hotels
      responses:
        '200':
          description: successful
  "/api/v1/users/{user_id}/hotels":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: list hotels
      responses:
        '200':
          description: successful
  "/api/v1/users/{user_id}/hotels/{id}":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show hotel
      responses:
        '200':
          description: successful
  "/api/v1/users/{user_id}/reservations":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: list reservations
      responses:
        '200':
          description: successful
  "/api/v1/users/{user_id}/hotels/{hotel_id}/reservations":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    - name: hotel_id
      in: path
      description: hotel_id
      required: true
      schema:
        type: string
    post:
      summary: create reservation
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                city:
                  type: string
                date:
                  type: string
                hotel_name:
                  type: string
                price:
                  type: string
              required:
              - city
              - date
              - hotel_name
              - price
  "/api/v1/users/{user_id}/hotels/{hotel_id}/reservations/{id}":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    - name: hotel_id
      in: path
      description: hotel_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    delete:
      summary: delete reservation
      responses:
        '200':
          description: successful
  "/api/v1/users":
    post:
      summary: create user
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
              - username
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: show user
      responses:
        '200':
          description: successful
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:5000
